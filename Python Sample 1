def nestedRemoval(text: str, leftPattern: str, rightPattern: str) -> str:
#List to store indices to be removed
remove = []
#Temporary list to store indices
t = []
for i in range(len(text)):
s = text[i]
#Add left index to tempoary list
if s is leftPattern:
t.append(i)
elif s is rightPattern:
#If right pattern is found, add index in remove list
if len(t)>0 and text[t[-1]] is leftPattern:
remove.append(t[-1])
remove.append(i)
t = t[:-1]
else:
t.append(i)
ans = ''
for i in range(len(text)):
if i not in remove:
ans = ans+text[i]
return ans
  
if __name__ == '__main__':
text = "{{Muscat}} {}mecum tollgate} poultry quarrymen pantheon asteria"
leftPattern = "{"
rightPattern = "}"
print('text = ',text)
print('leftPattern = ',leftPattern)
print('rightPattern = ',rightPattern)
print('return = ',nestedRemoval(text,leftPattern,rightPattern))
print()
text = "theretofore [][] demography]] pirouetting morsel [[pesticide"
leftPattern = "["
rightPattern = "]"
print('text = ',text)
print('leftPattern = ',leftPattern)
print('rightPattern = ',rightPattern)
print('return = ',nestedRemoval(text,leftPattern,rightPattern))
